{
	"name": "Misc - Kill All Inactive Sessions",
	"properties": {
		"content": {
			"query": "-- Show all sessions\nSELECT *\nFROM sys.dm_pdw_exec_sessions (NOLOCK)\nGO\n\n-- Show all non-System sessions that are idle for at least 5 min\nSELECT *\nFROM sys.dm_pdw_exec_sessions (NOLOCK)\nWHERE login_name<>'System' -- avoid system threads\nAND client_id<>'System'\nAND status='Idle'\nAND DATEDIFF(MINUTE,login_time,GETDATE())>=5 -- thread idle for at least 5 minutes\nAND sql_spid<>@@spid -- ignore current spid\nGO\n\n\n-- Create stored procedure for killing inactive sessions\nCREATE PROCEDURE dbo.usp_killinactivesessions\nAS BEGIN\n\tCREATE TABLE #tbl\n\tWITH\n\t( DISTRIBUTION = ROUND_ROBIN\n\t)\n\tAS\n\tSELECT ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS Sequence\n\t, session_id\n\tFROM sys.dm_pdw_exec_sessions (NOLOCK)\n\tWHERE login_name<>'System' -- avoid system threads\n\tAND client_id<>'System'\n\tAND status='Idle'\n\tAND DATEDIFF(MINUTE,login_time,GETDATE())>=5 -- thread idle for at least 5 minutes\n\tAND sql_spid<>@@spid -- ignore current spid\n\n\tDECLARE @nbr_statements INT = (SELECT COUNT(*) FROM #tbl)\n\t, @i INT = 1\n\t;\n\n\tWHILE   @i <= @nbr_statements\n\tBEGIN\n\t\tDECLARE @user_session_id VARCHAR(30) = (SELECT session_id FROM #tbl WHERE Sequence = @i)\n\t\tPRINT 'Killing '+@user_session_id\n\t\tEXEC('KILL '''+@user_session_id+'''')\n\t\tSET @i +=1;\n\tEND\n\tDROP TABLE #tbl\nEND\nGO\n\nEXEC dbo.usp_killinactivesessions\nGO\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "small",
				"databaseName": "small"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}